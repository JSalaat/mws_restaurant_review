{"version":3,"sources":["restaurant_info.js"],"names":["restaurant","map","window","initMap","fetchRestaurantFromURL","error","console","self","google","maps","Map","document","getElementById","zoom","center","latlng","scrollwheel","fillBreadcrumb","DBHelper","mapMarkerForRestaurant","callback","id","getParameterByName","fetchRestaurantById","fillRestaurantHTML","name","innerHTML","address","pictureEl","createElement","sourceEl","imgPath","imageUrlForRestaurant","replace","type","srcset","sourceJpeg","imageDiv","image","className","alt","src","sizes","append","cuisine","cuisine_type","operating_hours","fillRestaurantHoursHTML","fillReviewsHTML","operatingHours","hours","key","row","day","appendChild","time","reviews","container","title","noReviews","ul","forEach","createReviewHTML","review","li","date","comments","rating","breadcrumb","setAttribute","url","location","href","regex","RegExp","results","exec","decodeURIComponent"],"mappings":"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","file":"restaurant_info.js","sourcesContent":["let restaurant;\r\nvar map;\r\n\r\n/**\r\n * Initialize Google map, called from HTML.\r\n */\r\nwindow.initMap = () => {\r\n  fetchRestaurantFromURL((error, restaurant) => {\r\n    if (error) { // Got an error!\r\n      console.error(error);\r\n    } else {\r\n      self.map = new google.maps.Map(document.getElementById('map'), {\r\n        zoom: 16,\r\n        center: restaurant.latlng,\r\n        scrollwheel: false\r\n      });\r\n      fillBreadcrumb();\r\n      DBHelper.mapMarkerForRestaurant(self.restaurant, self.map);\r\n    }\r\n  });\r\n}\r\n\r\n/**\r\n * Get current restaurant from page URL.\r\n */\r\nlet fetchRestaurantFromURL = (callback) => {\r\n  if (self.restaurant) { // restaurant already fetched!\r\n    callback(null, self.restaurant)\r\n    return;\r\n  }\r\n  const id = getParameterByName('id');\r\n  if (!id) { // no id found in URL\r\n    error = 'No restaurant id in URL'\r\n    callback(error, null);\r\n  } else {\r\n    DBHelper.fetchRestaurantById(id, (error, restaurant) => {\r\n      self.restaurant = restaurant;\r\n      if (!restaurant) {\r\n        console.error(error);\r\n        return;\r\n      }\r\n      fillRestaurantHTML();\r\n      callback(null, restaurant)\r\n    });\r\n  }\r\n}\r\n\r\n/**\r\n * Create restaurant HTML and add it to the webpage\r\n */\r\nlet fillRestaurantHTML = (restaurant = self.restaurant) => {\r\n  const name = document.getElementById('restaurant-name');\r\n  name.innerHTML = restaurant.name;\r\n\r\n  const address = document.getElementById('restaurant-address');\r\n  address.innerHTML = restaurant.address;\r\n  const pictureEl = document.createElement('picture');\r\n  const sourceEl = document.createElement('source');\r\n  const imgPath = DBHelper.imageUrlForRestaurant(restaurant).replace(\".jpg\", \"\");\r\n\r\n  sourceEl.type = 'image/webp';\r\n  sourceEl.srcset = `${imgPath}.webp`;\r\n  const sourceJpeg = document.createElement('source');\r\n  sourceJpeg.type = 'image/jpeg';\r\n\r\n  const imageDiv = document.getElementById('restaurant-img');\r\n  const image = document.createElement('img');\r\n  image.className = 'restaurant-img';\r\n  image.alt = `Image for Restaurant ${restaurant.name}`;\r\n  image.src = DBHelper.imageUrlForRestaurant(restaurant).replace(\".jpg\", \"\");\r\n\r\n  image.src = `${imgPath}_800.jpg`;\r\n  image.sizes='(max-width: 960px) 50vw, 100vw';\r\n  image.srcset = [`${imgPath}_400.jpg 400w`, `${imgPath}_800.jpg 800w`];\r\n  pictureEl.append(sourceEl);\r\n  pictureEl.append(sourceJpeg);\r\n  pictureEl.append(image);\r\n  imageDiv.append(pictureEl);\r\n\r\n  const cuisine = document.getElementById('restaurant-cuisine');\r\n  cuisine.innerHTML = restaurant.cuisine_type;\r\n\r\n  // fill operating hours\r\n  if (restaurant.operating_hours) {\r\n    fillRestaurantHoursHTML();\r\n  }\r\n  // fill reviews\r\n  fillReviewsHTML();\r\n}\r\n\r\n/**\r\n * Create restaurant operating hours HTML table and add it to the webpage.\r\n */\r\nlet fillRestaurantHoursHTML = (operatingHours = self.restaurant.operating_hours) => {\r\n  const hours = document.getElementById('restaurant-hours');\r\n  for (let key in operatingHours) {\r\n    const row = document.createElement('tr');\r\n\r\n    const day = document.createElement('td');\r\n    day.innerHTML = key;\r\n    row.appendChild(day);\r\n\r\n    const time = document.createElement('td');\r\n    time.innerHTML = operatingHours[key];\r\n    row.appendChild(time);\r\n\r\n    hours.appendChild(row);\r\n  }\r\n}\r\n\r\n/**\r\n * Create all reviews HTML and add them to the webpage.\r\n */\r\nlet fillReviewsHTML = (reviews = self.restaurant.reviews) => {\r\n  const container = document.getElementById('reviews-container');\r\n  const title = document.createElement('h2');\r\n  title.innerHTML = 'Reviews';\r\n  container.appendChild(title);\r\n\r\n  if (!reviews) {\r\n    const noReviews = document.createElement('p');\r\n    noReviews.innerHTML = 'No reviews yet!';\r\n    container.appendChild(noReviews);\r\n    return;\r\n  }\r\n  const ul = document.getElementById('reviews-list');\r\n  reviews.forEach(review => {\r\n    ul.appendChild(createReviewHTML(review));\r\n  });\r\n  container.appendChild(ul);\r\n}\r\n\r\n/**\r\n * Create review HTML and add it to the webpage.\r\n */\r\nlet createReviewHTML = (review) => {\r\n  const li = document.createElement('li');\r\n  const name = document.createElement('p');\r\n  name.innerHTML = `<b>${review.name}</b> wrote on ${review.date}`;\r\n  li.appendChild(name);\r\n\r\n  const comments = document.createElement('blockquote');\r\n  comments.innerHTML = review.comments;\r\n  li.appendChild(comments);\r\n\r\n  const rating = document.createElement('p');\r\n  rating.className = \"ratings-el\"\r\n  rating.innerHTML = `Rating: ${review.rating}<b>☆</b>`;\r\n  li.appendChild(rating);\r\n\r\n  return li;\r\n}\r\n\r\n/**\r\n * Add restaurant name to the breadcrumb navigation menu\r\n */\r\nlet fillBreadcrumb = (restaurant=self.restaurant) => {\r\n  const breadcrumb = document.getElementById('breadcrumb');\r\n  const li = document.createElement('li');\r\n  li.setAttribute('aria-current', restaurant.name);\r\n  li.innerHTML = restaurant.name;\r\n  breadcrumb.appendChild(li);\r\n}\r\n\r\n/**\r\n * Get a parameter by name from page URL.\r\n */\r\nlet getParameterByName = (name, url) => {\r\n  if (!url)\r\n    url = window.location.href;\r\n  name = name.replace(/[\\[\\]]/g, '\\\\$&');\r\n  const regex = new RegExp(`[?&]${name}(=([^&#]*)|&|#|$)`),\r\n    results = regex.exec(url);\r\n  if (!results)\r\n    return null;\r\n  if (!results[2])\r\n    return '';\r\n  return decodeURIComponent(results[2].replace(/\\+/g, ' '));\r\n}\r\n"]}