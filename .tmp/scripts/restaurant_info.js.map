{"version":3,"sources":["restaurant_info.js"],"names":["restaurant","newMap","document","addEventListener","event","initMap","window","fetchRestaurantFromURL","error","console","self","L","map","center","latlng","lat","lng","zoom","scrollWheelZoom","tileLayer","mapboxToken","maxZoom","attribution","id","addTo","fillBreadcrumb","DBHelper","mapMarkerForRestaurant","callback","getParameterByName","fetchRestaurantById","fillRestaurantHTML","name","getElementById","innerHTML","favEl","createElement","is_favorite","innerText","append","onclick","toggleFavorite","address","pictureEl","sourceEl","imgPath","imageUrlForRestaurant","replace","type","srcset","sourceJpeg","imageDiv","image","className","alt","src","sizes","cuisine","cuisine_type","operating_hours","fillRestaurantHoursHTML","fillReviewsHTML","operatingHours","hours","key","row","day","appendChild","time","reviews","container","title","noReviews","ul","forEach","createReviewHTML","review","li","Date","createdAt","toGMTString","comments","rating","breadcrumb","setAttribute","url","location","href","regex","RegExp","results","exec","decodeURIComponent","submitReview","data","elements","value","err","res","log","reload","flag"],"mappings":"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","file":"restaurant_info.js","sourcesContent":["let restaurant;\nvar newMap;\n\n/**\n * Initialize map as soon as the page is loaded.\n */\ndocument.addEventListener('DOMContentLoaded', (event) => {\n  initMap();\n});\n\n/**\n * Initialize leaflet map\n */\nwindow.initMap = () => {\n  fetchRestaurantFromURL((error, restaurant) => {\n    if (error) { // Got an error!\n      console.error(error);\n    } else {\n      self.newMap = L.map('map', {\n        center: [restaurant.latlng.lat, restaurant.latlng.lng],\n        zoom: 16,\n        scrollWheelZoom: false\n      });\n      L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.jpg70?access_token=pk.eyJ1IjoianNhbGFhdCIsImEiOiJjamtmYXh5dWIwNnN6M2twOWxxZ2U3eW1qIn0.RBDZjhpWCr3Ydl6386E3Fw', {\n        mapboxToken: '<your MAPBOX API KEY HERE>',\n        maxZoom: 18,\n        attribution: 'Map data &copy; <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> contributors, ' +\n        '<a href=\"https://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>, ' +\n        'Imagery © <a href=\"https://www.mapbox.com/\">Mapbox</a>',\n        id: 'mapbox.streets'\n      }).addTo(newMap);\n      fillBreadcrumb();\n      DBHelper.mapMarkerForRestaurant(self.restaurant, self.newMap);\n    }\n  });\n}\n\n/**\n * Get current restaurant from page URL.\n */\nlet fetchRestaurantFromURL = (callback) => {\n  if (self.restaurant) { // restaurant already fetched!\n    callback(null, self.restaurant)\n    return;\n  }\n  const id = getParameterByName('id');\n  if (!id) { // no id found in URL\n    error = 'No restaurant id in URL'\n    callback(error, null);\n  } else {\n    DBHelper.fetchRestaurantById(id, (error, restaurant) => {\n      self.restaurant = restaurant;\n      if (!restaurant) {\n        console.error(error);\n        return;\n      }\n      fillRestaurantHTML();\n      callback(null, restaurant)\n    });\n  }\n}\n\n/**\n * Create restaurant HTML and add it to the webpage\n */\nlet fillRestaurantHTML = (restaurant = self.restaurant) => {\n  const name = document.getElementById('restaurant-name');\n  name.innerHTML = restaurant.name;\n\n\n  const favEl = document.createElement('button');\n  //const favBtn = document.getElementById('mark-fav');\n  if (restaurant.is_favorite == true || restaurant.is_favorite == 'true'){\n    favEl.id = 'favorite';\n    favEl.innerText = '☆ FAVORITE';\n    name.append(favEl);\n\n    favEl.onclick = () => toggleFavorite('false');\n  }\n  else {\n    favEl.id = 'not-favorite';\n    favEl.innerText = 'Mark As Favorite';\n    name.append(favEl);\n    favEl.onclick = () => toggleFavorite('true');\n  }\n\n  const address = document.getElementById('restaurant-address');\n  address.innerHTML = restaurant.address;\n  const pictureEl = document.createElement('picture');\n  const sourceEl = document.createElement('source');\n  const imgPath = DBHelper.imageUrlForRestaurant(restaurant).replace('.jpg', '');\n\n  sourceEl.type = 'image/webp';\n  sourceEl.srcset = `${imgPath}.webp`;\n  const sourceJpeg = document.createElement('source');\n  sourceJpeg.type = 'image/jpeg';\n\n  const imageDiv = document.getElementById('restaurant-img');\n  const image = document.createElement('img');\n  image.className = 'restaurant-img';\n  image.alt = `Image for Restaurant ${restaurant.name}`;\n  image.src = DBHelper.imageUrlForRestaurant(restaurant).replace('.jpg', '');\n\n  image.src = `${imgPath}_800.jpg`;\n  image.sizes = '(max-width: 960px) 50vw, 100vw';\n  image.srcset = [`${imgPath}_400.jpg 400w`, `${imgPath}_800.jpg 800w`];\n  pictureEl.append(sourceEl);\n  pictureEl.append(sourceJpeg);\n  pictureEl.append(image);\n  imageDiv.append(pictureEl);\n\n  const cuisine = document.getElementById('restaurant-cuisine');\n  cuisine.innerHTML = restaurant.cuisine_type;\n\n  // fill operating hours\n  if (restaurant.operating_hours) {\n    fillRestaurantHoursHTML();\n  }\n  // fill reviews\n  fillReviewsHTML();\n}\n\n/**\n * Create restaurant operating hours HTML table and add it to the webpage.\n */\nlet fillRestaurantHoursHTML = (operatingHours = self.restaurant.operating_hours) => {\n  const hours = document.getElementById('restaurant-hours');\n  for (let key in operatingHours) {\n    const row = document.createElement('tr');\n\n    const day = document.createElement('td');\n    day.innerHTML = key;\n    row.appendChild(day);\n\n    const time = document.createElement('td');\n    time.innerHTML = operatingHours[key];\n    row.appendChild(time);\n\n    hours.appendChild(row);\n  }\n}\n\n/**\n * Create all reviews HTML and add them to the webpage.\n */\nlet fillReviewsHTML = (reviews = self.restaurant.reviews) => {\n  const container = document.getElementById('reviews-container');\n  const title = document.createElement('h2');\n  title.innerHTML = 'Reviews';\n  container.appendChild(title);\n\n  if (!reviews) {\n    const noReviews = document.createElement('p');\n    noReviews.innerHTML = 'No reviews yet!';\n    container.appendChild(noReviews);\n    return;\n  }\n  const ul = document.getElementById('reviews-list');\n  reviews.forEach(review => {\n    ul.appendChild(createReviewHTML(review));\n  });\n  container.appendChild(ul);\n}\n\n/**\n * Create review HTML and add it to the webpage.\n */\nlet createReviewHTML = (review) => {\n  const li = document.createElement('li');\n  const name = document.createElement('p');\n  name.innerHTML = `<b>${review.name}</b> wrote on ${new Date(review.createdAt).toGMTString()}`;\n  li.appendChild(name);\n\n  const comments = document.createElement('blockquote');\n  comments.innerHTML = review.comments;\n  li.appendChild(comments);\n\n  const rating = document.createElement('p');\n  rating.className = 'ratings-el'\n  rating.innerHTML = `Rating: ${review.rating}<b>☆</b>`;\n  li.appendChild(rating);\n\n  return li;\n}\n\n/**\n * Add restaurant name to the breadcrumb navigation menu\n */\nlet fillBreadcrumb = (restaurant = self.restaurant) => {\n  const breadcrumb = document.getElementById('breadcrumb');\n  const li = document.createElement('li');\n  li.setAttribute('aria-current', restaurant.name);\n  li.innerHTML = restaurant.name;\n  breadcrumb.appendChild(li);\n}\n\n/**\n * Get a parameter by name from page URL.\n */\nlet getParameterByName = (name, url) => {\n  if (!url)\n    url = window.location.href;\n  name = name.replace(/[\\[\\]]/g, '\\\\$&');\n  const regex = new RegExp(`[?&]${name}(=([^&#]*)|&|#|$)`),\n    results = regex.exec(url);\n  if (!results)\n    return null;\n  if (!results[2])\n    return '';\n  return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n}\n\n/**\n * Post new review.\n */\nlet submitReview = () => {\n  let data = {\n    'restaurant_id': restaurant.id,\n    'name': document.getElementById('review-form-elem').elements['name'].value,\n    'rating': document.getElementById('review-form-elem').elements['rating'].value,\n    'comments': document.getElementById('review-form-elem').elements['comments'].value\n  };\n  DBHelper.submitReview(data, function (err, res) {\n    if (err) throw err;\n    console.log(res);\n    window.location.reload(false);\n  });\n\n};\n/**\n * mark as favorite.\n */\nlet toggleFavorite = (flag) => {\n  DBHelper.toggleFavorite(restaurant.id, flag, function (err, res) {\n    if (err) throw err;\n    console.log(res);\n    window.location.reload(false);\n    //fillRestaurantHTML(res);\n  });\n};\n"]}