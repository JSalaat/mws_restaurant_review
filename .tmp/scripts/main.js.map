{"version":3,"sources":["main.js"],"names":["restaurants","neighborhoods","cuisines","selectedFilters","newMap","markers","document","addEventListener","event","initMap","fetchNeighborhoods","fetchCuisines","registerServiceWorker","navigator","serviceWorker","console","warn","register","then","reg","controller","waiting","log","installing","worker","state","DBHelper","error","self","fillNeighborhoodsHTML","select","getElementById","forEach","option","createElement","innerHTML","neighborhood","value","append","fillCuisinesHTML","cuisine","window","L","map","center","zoom","scrollWheelZoom","tileLayer","mapboxToken","maxZoom","attribution","id","addTo","updateRestaurants","cSelect","nSelect","cIndex","selectedIndex","nIndex","fetchRestaurantByCuisineAndNeighborhood","resetRestaurants","fillRestaurantsHTML","ul","m","setMap","setAttribute","createRestaurantHTML","restaurant","addMarkersToMap","li","pictureEl","sourceEl","imgPath","imageUrlForRestaurant","replace","type","sourceJpeg","image","className","alt","name","sizes","inViewport","favEl","is_favorite","classList","add","innerText","address","more","href","urlForRestaurant","marker","mapMarkerForRestaurant","on","onClick","location","options","url"],"mappings":";;AAAA,IAAIA,oBAAJ;AAAA,IACEC,sBADF;AAAA,IAEEC,iBAFF;AAGA,IAAIC,kBAAkB,EAAtB;AACA,IAAIC,MAAJ;AACA,IAAIC,UAAU,EAAd;;AAEA;;;AAGAC,SAASC,gBAAT,CAA0B,kBAA1B,EAA8C,UAACC,KAAD,EAAW;AACvDC;AACAC;AACAC;AACAC;AACD,CALD;;AAOA,IAAIA,wBAAwB,SAAxBA,qBAAwB,GAAM;AAChC,MAAI,CAACC,UAAUC,aAAf,EAA8B;AAC5BC,YAAQC,IAAR,CAAa,iEAAb;AACD;;AAEDH,YAAUC,aAAV,CAAwBG,QAAxB,CAAiC,kBAAjC,EAAqDC,IAArD,CAA0D,UAAUC,GAAV,EAAe;AACvE,QAAI,CAACN,UAAUC,aAAV,CAAwBM,UAA7B,EAAyC;AACvCL,cAAQC,IAAR,CAAa,mDAAb;AACA;AACD;;AAED,QAAIG,IAAIE,OAAR,EAAiB;AACfN,cAAQO,GAAR,CAAY,yCAAZ;AACA;AACD;;AAED,QAAIH,IAAII,UAAR,EAAoB;AAClBR,cAAQO,GAAR,CAAY,4CAAZ;AACAH,UAAII,UAAJ,CAAehB,gBAAf,CAAgC,aAAhC,EAA+C,UAACiB,MAAD,EAAY;AACzD,YAAIA,OAAOC,KAAP,KAAiB,WAArB,EAAkC;AAChCV,kBAAQO,GAAR,CAAY,iDAAZ;AACD;AACF,OAJD;AAKA;AACD;AACDP,YAAQO,GAAR,CAAYH,GAAZ;AACD,GArBD;AAsBD,CA3BD;;AA6BA;;;AAGA,IAAIT,qBAAqB,SAArBA,kBAAqB,GAAM;AAC7BgB,WAAShB,kBAAT,CAA4B,UAACiB,KAAD,EAAQ1B,aAAR,EAA0B;AACpD,QAAI0B,KAAJ,EAAW;AAAE;AACXZ,cAAQY,KAAR,CAAcA,KAAd;AACD,KAFD,MAEO;AACLC,WAAK3B,aAAL,GAAqBA,aAArB;AACA4B;AACD;AACF,GAPD;AAQD,CATD;;AAWA;;;AAGA,IAAIA,wBAAwB,SAAxBA,qBAAwB,GAAwC;AAAA,MAAvC5B,aAAuC,uEAAvB2B,KAAK3B,aAAkB;;AAClE,MAAM6B,SAASxB,SAASyB,cAAT,CAAwB,sBAAxB,CAAf;AACA9B,gBAAc+B,OAAd,CAAsB,wBAAgB;AACpC,QAAMC,SAAS3B,SAAS4B,aAAT,CAAuB,QAAvB,CAAf;AACAD,WAAOE,SAAP,GAAmBC,YAAnB;AACAH,WAAOI,KAAP,GAAeD,YAAf;AACAN,WAAOQ,MAAP,CAAcL,MAAd;AACD,GALD;AAMD,CARD;;AAUA;;;AAGA,IAAItB,gBAAgB,SAAhBA,aAAgB,GAAM;AACxBe,WAASf,aAAT,CAAuB,UAACgB,KAAD,EAAQzB,QAAR,EAAqB;AAC1C,QAAIyB,KAAJ,EAAW;AAAE;AACXZ,cAAQY,KAAR,CAAcA,KAAd;AACD,KAFD,MAEO;AACLC,WAAK1B,QAAL,GAAgBA,QAAhB;AACAqC;AACD;AACF,GAPD;AAQD,CATD;;AAWA;;;AAGA,IAAIA,mBAAmB,SAAnBA,gBAAmB,GAA8B;AAAA,MAA7BrC,QAA6B,uEAAlB0B,KAAK1B,QAAa;;AACnD,MAAM4B,SAASxB,SAASyB,cAAT,CAAwB,iBAAxB,CAAf;;AAEA7B,WAAS8B,OAAT,CAAiB,mBAAW;AAC1B,QAAMC,SAAS3B,SAAS4B,aAAT,CAAuB,QAAvB,CAAf;AACAD,WAAOE,SAAP,GAAmBK,OAAnB;AACAP,WAAOI,KAAP,GAAeG,OAAf;AACAV,WAAOQ,MAAP,CAAcL,MAAd;AACD,GALD;AAMD,CATD;;AAWA;;;AAGAQ,OAAOhC,OAAP,GAAiB,YAAM;AACrBmB,OAAKxB,MAAL,GAAcsC,EAAEC,GAAF,CAAM,KAAN,EAAa;AACzBC,YAAQ,CAAC,SAAD,EAAY,CAAC,SAAb,CADiB;AAEzBC,UAAM,EAFmB;AAGzBC,qBAAiB;AAHQ,GAAb,CAAd;AAKAJ,IAAEK,SAAF,CAAY,+JAAZ,EAA6K;AAC3KC,iBAAa,4BAD8J;AAE3KC,aAAS,EAFkK;AAG3KC,iBAAa,8FACb,0EADa,GAEb,wDAL2K;AAM3KC,QAAI;AANuK,GAA7K,EAOGC,KAPH,CAOShD,MAPT;;AASAiD;AACD,CAhBD;;AAkBA;;;AAGA,IAAIA,oBAAoB,SAApBA,iBAAoB,GAAM;AAC5B,MAAMC,UAAUhD,SAASyB,cAAT,CAAwB,iBAAxB,CAAhB;AACA,MAAMwB,UAAUjD,SAASyB,cAAT,CAAwB,sBAAxB,CAAhB;;AAEA,MAAMyB,SAASF,QAAQG,aAAvB;AACA,MAAMC,SAASH,QAAQE,aAAvB;;AAEAtD,kBAAgBqC,OAAhB,GAA0Bc,QAAQE,MAAR,EAAgBnB,KAA1C;AACAlC,kBAAgBiC,YAAhB,GAA+BmB,QAAQG,MAAR,EAAgBrB,KAA/C;;AAEAX,WAASiC,uCAAT,CAAiDxD,gBAAgBqC,OAAjE,EAA0ErC,gBAAgBiC,YAA1F,EAAwG,UAACT,KAAD,EAAQ3B,WAAR,EAAwB;AAC9H,QAAI2B,KAAJ,EAAW;AAAE;AACXZ,cAAQY,KAAR,CAAcA,KAAd;AACD,KAFD,MAEO;AACLiC,uBAAiB5D,WAAjB;AACA6D;AACD;AACF,GAPD;AAQD,CAlBD;;AAoBA;;;AAGA,IAAID,mBAAmB,SAAnBA,gBAAmB,CAAC5D,WAAD,EAAiB;AACtC;AACA4B,OAAK5B,WAAL,GAAmB,EAAnB;AACA,MAAM8D,KAAKxD,SAASyB,cAAT,CAAwB,kBAAxB,CAAX;AACA+B,KAAG3B,SAAH,GAAe,EAAf;;AAEA;AACAP,OAAKvB,OAAL,CAAa2B,OAAb,CAAqB;AAAA,WAAK+B,EAAEC,MAAF,CAAS,IAAT,CAAL;AAAA,GAArB;AACApC,OAAKvB,OAAL,GAAe,EAAf;AACAuB,OAAK5B,WAAL,GAAmBA,WAAnB;AACD,CAVD;;AAYA;;;AAGA,IAAI6D,sBAAsB,SAAtBA,mBAAsB,GAAoC;AAAA,MAAnC7D,WAAmC,uEAArB4B,KAAK5B,WAAgB;;AAC5D,MAAM8D,KAAKxD,SAASyB,cAAT,CAAwB,kBAAxB,CAAX;AACA+B,KAAGG,YAAH,CAAgB,YAAhB,eAAyC9D,gBAAgBqC,OAAzD,qBAAgFrC,gBAAgBiC,YAAhG;AACApC,cAAYgC,OAAZ,CAAoB,sBAAc;AAChC8B,OAAGxB,MAAH,CAAU4B,qBAAqBC,UAArB,CAAV;AACD,GAFD;AAGAC;AACD,CAPD;;AASA;;;AAGA,IAAIF,uBAAuB,SAAvBA,oBAAuB,CAACC,UAAD,EAAgB;AACzC,MAAME,KAAK/D,SAAS4B,aAAT,CAAuB,IAAvB,CAAX;AACA,MAAMoC,YAAYhE,SAAS4B,aAAT,CAAuB,SAAvB,CAAlB;AACA,MAAMqC,WAAWjE,SAAS4B,aAAT,CAAuB,QAAvB,CAAjB;AACA,MAAMsC,UAAU9C,SAAS+C,qBAAT,CAA+BN,UAA/B,EAA2CO,OAA3C,CAAmD,MAAnD,EAA2D,EAA3D,CAAhB;;AAEAH,WAASI,IAAT,GAAgB,YAAhB;AACAJ,WAAS,aAAT,IAA6BC,OAA7B;AACA,MAAMI,aAAatE,SAAS4B,aAAT,CAAuB,QAAvB,CAAnB;AACA0C,aAAWD,IAAX,GAAkB,YAAlB;;AAEA,MAAME,QAAQvE,SAAS4B,aAAT,CAAuB,KAAvB,CAAd;AACA2C,QAAMC,SAAN,GAAkB,gBAAlB;AACAD,QAAME,GAAN,6BAAoCZ,WAAWa,IAA/C;AACAH,QAAMZ,YAAN,CAAmB,YAAnB,kBAA+CE,WAAWa,IAA1D;;AAEAH,QAAM,UAAN,IAAuBL,OAAvB;AACAK,QAAMI,KAAN,GAAc,gCAAd;AACAJ,QAAM,aAAN,IAAuB,CAAIL,OAAJ,oBAA+BA,OAA/B,mBAAvB;AACAF,YAAUhC,MAAV,CAAiBiC,QAAjB;AACAD,YAAUhC,MAAV,CAAiBsC,UAAjB;AACAN,YAAUhC,MAAV,CAAiBuC,KAAjB;AACAK,aAAWL,KAAX,EAAkB,YAAW;AAC3BN,aAASN,YAAT,CAAsB,QAAtB,EAAgCM,SAAS,aAAT,CAAhC;AACAM,UAAMZ,YAAN,CAAmB,QAAnB,EAA6BY,MAAM,aAAN,CAA7B;AACAA,UAAMZ,YAAN,CAAmB,KAAnB,EAA0BY,MAAM,UAAN,CAA1B;AACD,GAJD;AAKAR,KAAG/B,MAAH,CAAUgC,SAAV;;AAEA,MAAMU,OAAO1E,SAAS4B,aAAT,CAAuB,IAAvB,CAAb;AACA8C,OAAK7C,SAAL,GAAiBgC,WAAWa,IAA5B;AACAX,KAAG/B,MAAH,CAAU0C,IAAV;;AAEA,MAAMG,QAAQ7E,SAAS4B,aAAT,CAAuB,MAAvB,CAAd;AACA,MAAIiC,WAAWiB,WAAX,IAA0B,IAA1B,IAAkCjB,WAAWiB,WAAX,IAA0B,MAAhE,EAAuE;AACrED,UAAME,SAAN,CAAgBC,GAAhB,CAAoB,eAApB;AACAH,UAAMI,SAAN,GAAkB,YAAlB;AACAP,SAAK1C,MAAL,CAAY6C,KAAZ;AACD;;AAED,MAAM/C,eAAe9B,SAAS4B,aAAT,CAAuB,GAAvB,CAArB;AACAE,eAAaD,SAAb,GAAyBgC,WAAW/B,YAApC;AACAiC,KAAG/B,MAAH,CAAUF,YAAV;;AAEA,MAAMoD,UAAUlF,SAAS4B,aAAT,CAAuB,GAAvB,CAAhB;AACAsD,UAAQrD,SAAR,GAAoBgC,WAAWqB,OAA/B;AACAnB,KAAG/B,MAAH,CAAUkD,OAAV;;AAEA,MAAMC,OAAOnF,SAAS4B,aAAT,CAAuB,GAAvB,CAAb;AACAuD,OAAKtD,SAAL,GAAiB,cAAjB;AACAsD,OAAKxB,YAAL,CAAkB,YAAlB,uBAAmDE,WAAWa,IAA9D;AACAS,OAAKC,IAAL,GAAYhE,SAASiE,gBAAT,CAA0BxB,UAA1B,CAAZ;AACAE,KAAG/B,MAAH,CAAUmD,IAAV;;AAEA,SAAOpB,EAAP;AACD,CAvDD;;AAyDA;;;AAGA,IAAID,kBAAkB,SAAlBA,eAAkB,GAAoC;AAAA,MAAnCpE,WAAmC,uEAArB4B,KAAK5B,WAAgB;;AACxDA,cAAYgC,OAAZ,CAAoB,sBAAc;AAChC;AACA,QAAM4D,SAASlE,SAASmE,sBAAT,CAAgC1B,UAAhC,EAA4CvC,KAAKxB,MAAjD,CAAf;AACAwF,WAAOE,EAAP,CAAU,OAAV,EAAmBC,OAAnB;AACA,aAASA,OAAT,GAAmB;AACjBtD,aAAOuD,QAAP,CAAgBN,IAAhB,GAAuBE,OAAOK,OAAP,CAAeC,GAAtC;AACD;AACF,GAPD;AAQD,CATD","file":"main.js","sourcesContent":["let restaurants,\n  neighborhoods,\n  cuisines;\nvar selectedFilters = {};\nvar newMap;\nvar markers = [];\n\n/**\n * Fetch neighborhoods and cuisines as soon as the page is loaded.\n */\ndocument.addEventListener('DOMContentLoaded', (event) => {\n  initMap();\n  fetchNeighborhoods();\n  fetchCuisines();\n  registerServiceWorker();\n});\n\nlet registerServiceWorker = () => {\n  if (!navigator.serviceWorker) {\n    console.warn('[registerServiceWorker] No service worker available in browser.');\n  }\n\n  navigator.serviceWorker.register('serviceWorker.js').then(function (reg) {\n    if (!navigator.serviceWorker.controller) {\n      console.warn('[serviceWorker.register] No controller. Aborting.');\n      return;\n    }\n\n    if (reg.waiting) {\n      console.log('[serviceWorker.register] State::Waiting');\n      return;\n    }\n\n    if (reg.installing) {\n      console.log('[serviceWorker.register] State::Installing');\n      reg.installing.addEventListener('statechange', (worker) => {\n        if (worker.state === 'installed') {\n          console.log('[serviceWorker.register] StateChange::Installed');\n        }\n      });\n      return;\n    }\n    console.log(reg);\n  });\n};\n\n/**\n * Fetch all neighborhoods and set their HTML.\n */\nlet fetchNeighborhoods = () => {\n  DBHelper.fetchNeighborhoods((error, neighborhoods) => {\n    if (error) { // Got an error\n      console.error(error);\n    } else {\n      self.neighborhoods = neighborhoods;\n      fillNeighborhoodsHTML();\n    }\n  });\n}\n\n/**\n * Set neighborhoods HTML.\n */\nlet fillNeighborhoodsHTML = (neighborhoods = self.neighborhoods) => {\n  const select = document.getElementById('neighborhoods-select');\n  neighborhoods.forEach(neighborhood => {\n    const option = document.createElement('option');\n    option.innerHTML = neighborhood;\n    option.value = neighborhood;\n    select.append(option);\n  });\n}\n\n/**\n * Fetch all cuisines and set their HTML.\n */\nlet fetchCuisines = () => {\n  DBHelper.fetchCuisines((error, cuisines) => {\n    if (error) { // Got an error!\n      console.error(error);\n    } else {\n      self.cuisines = cuisines;\n      fillCuisinesHTML();\n    }\n  });\n}\n\n/**\n * Set cuisines HTML.\n */\nlet fillCuisinesHTML = (cuisines = self.cuisines) => {\n  const select = document.getElementById('cuisines-select');\n\n  cuisines.forEach(cuisine => {\n    const option = document.createElement('option');\n    option.innerHTML = cuisine;\n    option.value = cuisine;\n    select.append(option);\n  });\n}\n\n/**\n * Initialize Google map, called from HTML.\n */\nwindow.initMap = () => {\n  self.newMap = L.map('map', {\n    center: [40.722216, -73.987501],\n    zoom: 12,\n    scrollWheelZoom: false\n  });\n  L.tileLayer('https://api.tiles.mapbox.com/v4/{id}/{z}/{x}/{y}.jpg70?access_token=pk.eyJ1IjoianNhbGFhdCIsImEiOiJjamtmYXh5dWIwNnN6M2twOWxxZ2U3eW1qIn0.RBDZjhpWCr3Ydl6386E3Fw', {\n    mapboxToken: '<your MAPBOX API KEY HERE>',\n    maxZoom: 18,\n    attribution: 'Map data &copy; <a href=\"https://www.openstreetmap.org/\">OpenStreetMap</a> contributors, ' +\n    '<a href=\"https://creativecommons.org/licenses/by-sa/2.0/\">CC-BY-SA</a>, ' +\n    'Imagery © <a href=\"https://www.mapbox.com/\">Mapbox</a>',\n    id: 'mapbox.streets'\n  }).addTo(newMap);\n\n  updateRestaurants();\n}\n\n/**\n * Update page and map for current restaurants.\n */\nlet updateRestaurants = () => {\n  const cSelect = document.getElementById('cuisines-select');\n  const nSelect = document.getElementById('neighborhoods-select');\n\n  const cIndex = cSelect.selectedIndex;\n  const nIndex = nSelect.selectedIndex;\n\n  selectedFilters.cuisine = cSelect[cIndex].value;\n  selectedFilters.neighborhood = nSelect[nIndex].value;\n\n  DBHelper.fetchRestaurantByCuisineAndNeighborhood(selectedFilters.cuisine, selectedFilters.neighborhood, (error, restaurants) => {\n    if (error) { // Got an error!\n      console.error(error);\n    } else {\n      resetRestaurants(restaurants);\n      fillRestaurantsHTML();\n    }\n  })\n}\n\n/**\n * Clear current restaurants, their HTML and remove their map markers.\n */\nlet resetRestaurants = (restaurants) => {\n  // Remove all restaurants\n  self.restaurants = [];\n  const ul = document.getElementById('restaurants-list');\n  ul.innerHTML = '';\n\n  // Remove all map markers\n  self.markers.forEach(m => m.setMap(null));\n  self.markers = [];\n  self.restaurants = restaurants;\n}\n\n/**\n * Create all restaurants HTML and add them to the webpage.\n */\nlet fillRestaurantsHTML = (restaurants = self.restaurants) => {\n  const ul = document.getElementById('restaurants-list');\n  ul.setAttribute('aria-label', `List of ${selectedFilters.cuisine} food within ${selectedFilters.neighborhood} neighborhood`);\n  restaurants.forEach(restaurant => {\n    ul.append(createRestaurantHTML(restaurant));\n  });\n  addMarkersToMap();\n}\n\n/**\n * Create restaurant HTML.\n */\nlet createRestaurantHTML = (restaurant) => {\n  const li = document.createElement('li');\n  const pictureEl = document.createElement('picture');\n  const sourceEl = document.createElement('source');\n  const imgPath = DBHelper.imageUrlForRestaurant(restaurant).replace('.jpg', '');\n\n  sourceEl.type = 'image/webp';\n  sourceEl['data-srcset'] = `${imgPath}.webp`;\n  const sourceJpeg = document.createElement('source');\n  sourceJpeg.type = 'image/jpeg';\n\n  const image = document.createElement('img');\n  image.className = 'restaurant-img';\n  image.alt = `Image for Restaurant ${restaurant.name}`;\n  image.setAttribute('aria-label', `Restaurant ${restaurant.name} image`);\n\n  image['data-src'] = `${imgPath}_400.jpg`;\n  image.sizes = '(max-width: 960px) 50vw, 100vw';\n  image['data-srcset'] = [`${imgPath}_400.jpg 400w`, `${imgPath}_800.jpg 800w`];\n  pictureEl.append(sourceEl);\n  pictureEl.append(sourceJpeg);\n  pictureEl.append(image);\n  inViewport(image, function() {\n    sourceEl.setAttribute('srcset', sourceEl['data-srcset']);\n    image.setAttribute('srcset', image['data-srcset']);\n    image.setAttribute('src', image['data-src']);\n  });\n  li.append(pictureEl);\n\n  const name = document.createElement('h2');\n  name.innerHTML = restaurant.name;\n  li.append(name);\n\n  const favEl = document.createElement('span');\n  if (restaurant.is_favorite == true || restaurant.is_favorite == 'true'){\n    favEl.classList.add('favorite-star');\n    favEl.innerText = '☆ Favorite';\n    name.append(favEl);\n  }\n\n  const neighborhood = document.createElement('p');\n  neighborhood.innerHTML = restaurant.neighborhood;\n  li.append(neighborhood);\n\n  const address = document.createElement('p');\n  address.innerHTML = restaurant.address;\n  li.append(address);\n\n  const more = document.createElement('a');\n  more.innerHTML = 'View Details';\n  more.setAttribute('aria-label', `View restaurant ${restaurant.name}`);\n  more.href = DBHelper.urlForRestaurant(restaurant);\n  li.append(more);\n\n  return li;\n}\n\n/**\n * Add markers for current restaurants to the map.\n */\nlet addMarkersToMap = (restaurants = self.restaurants) => {\n  restaurants.forEach(restaurant => {\n    // Add marker to the map\n    const marker = DBHelper.mapMarkerForRestaurant(restaurant, self.newMap);\n    marker.on('click', onClick);\n    function onClick() {\n      window.location.href = marker.options.url;\n    }\n  });\n}\n\n"]}