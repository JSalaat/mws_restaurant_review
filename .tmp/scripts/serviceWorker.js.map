{"version":3,"sources":["serviceWorker.js"],"names":["staticCacheName","assets","self","addEventListener","event","waitUntil","caches","open","then","cache","addAll","skipWaiting","keys","Promise","all","cacheNames","filter","cacheName","startsWith","map","delete","requestUrl","URL","request","url","origin","location","pathname","respondWith","match","response","fetch"],"mappings":";;AAAA;;;;AAIA,IAAMA,kBAAkB,sBAAxB;AACA;;;AAGA,IAAMC,SAAS,CACX,KADW,EAEX,eAFW,EAGX,oBAHW,EAIX,SAJW,EAKX,oBALW,EAMX,aANW,EAOX,sBAPW,EAQX,qBARW,EASX,eATW,EAUX,eAVW,EAWX,eAXW,EAYX,eAZW,EAaX,eAbW,EAcX,eAdW,EAeX,eAfW,EAgBX,eAhBW,EAiBX,eAjBW,EAkBX,gBAlBW,EAmBX,kBAnBW,EAoBX,kBApBW,EAqBX,kBArBW,EAsBX,kBAtBW,EAuBX,kBAvBW,EAwBX,kBAxBW,EAyBX,kBAzBW,EA0BX,kBA1BW,EA2BX,kBA3BW,EA4BX,kBA5BW,EA6BX,kBA7BW,EA8BX,kBA9BW,EA+BX,kBA/BW,EAgCX,kBAhCW,EAiCX,kBAjCW,EAkCX,kBAlCW,EAmCX,kBAnCW,EAoCX,kBApCW,EAqCX,mBArCW,EAsCX,mBAtCW,CAAf;;AAyCAC,KAAKC,gBAAL,CAAsB,SAAtB,EAAiC,iBAAS;AACtCC,UAAMC,SAAN,CACIC,OAAOC,IAAP,CAAYP,eAAZ,EACKQ,IADL,CACW,iBAAS;AACZ,eAAOC,MAAMC,MAAN,CAAaT,MAAb,EACFO,IADE,CACG;AAAA,mBAAMN,KAAKS,WAAL,EAAN;AAAA,SADH,CAAP;AAEH,KAJL,CADJ;AAOH,CARD;;AAUA;;;AAGAT,KAAKC,gBAAL,CAAsB,UAAtB,EAAkC,iBAAS;AACvCC,UAAMC,SAAN,CACIC,OAAOM,IAAP,GAAcJ,IAAd,CAAoB,sBAAc;AAC9B,eAAOK,QAAQC,GAAR,CACHC,WAAWC,MAAX,CAAmB,qBAAa;AAC5B,mBAAOC,UAAUC,UAAV,CAAqB,oBAArB,KACHD,cAAcjB,eADlB;AAEH,SAHD,EAGGmB,GAHH,CAGQ,qBAAa;AACjB,mBAAOb,OAAOc,MAAP,CAAcH,SAAd,CAAP;AACH,SALD,CADG,CAAP;AAQH,KATD,CADJ;AAYH,CAbD;;AAeA;;;AAGAf,KAAKC,gBAAL,CAAsB,OAAtB,EAA+B,UAAUC,KAAV,EAAiB;AAC5C,QAAMiB,aAAa,IAAIC,GAAJ,CAAQlB,MAAMmB,OAAN,CAAcC,GAAtB,CAAnB;;AAEA,QAAIH,WAAWI,MAAX,KAAsBC,SAASD,MAAnC,EAA2C;AACvC,YAAIJ,WAAWM,QAAX,KAAwB,GAA5B,EAAiC;AAC7BvB,kBAAMwB,WAAN,CACItB,OAAOuB,KAAP,CAAa,YAAb,CADJ;AAGA;AACH;AACJ;;AAEDzB,UAAMwB,WAAN,CACItB,OAAOuB,KAAP,CAAazB,MAAMmB,OAAnB,EAA4Bf,IAA5B,CAAiC,UAAUsB,QAAV,EAAoB;AACjD,eAAOA,YAAYC,MAAM3B,MAAMmB,OAAZ,CAAnB;AACH,KAFD,CADJ;AAKH,CAjBD","file":"serviceWorker.js","sourcesContent":["/**\r\n * Created by jsalaat on 6/20/18.\r\n */\r\n\r\nconst staticCacheName = 'restaurant-review-v1';\r\n/**\r\n * Install service worker and cache assets\r\n */\r\nconst assets = [\r\n    '../',\r\n    '../index.html',\r\n    '../restaurant.html',\r\n    'main.js',\r\n    'restaurant_info.js',\r\n    'dbhelper.js',\r\n    '../styles/styles.css',\r\n    '../styles/media.css',\r\n    '../img/1.webp',\r\n    '../img/2.webp',\r\n    '../img/3.webp',\r\n    '../img/4.webp',\r\n    '../img/5.webp',\r\n    '../img/6.webp',\r\n    '../img/7.webp',\r\n    '../img/8.webp',\r\n    '../img/9.webp',\r\n    '../img/10.webp',\r\n    '../img/1_400.jpg',\r\n    '../img/1_800.jpg',\r\n    '../img/2_400.jpg',\r\n    '../img/2_800.jpg',\r\n    '../img/3_400.jpg',\r\n    '../img/3_800.jpg',\r\n    '../img/4_400.jpg',\r\n    '../img/4_800.jpg',\r\n    '../img/5_400.jpg',\r\n    '../img/5_800.jpg',\r\n    '../img/6_400.jpg',\r\n    '../img/6_800.jpg',\r\n    '../img/7_400.jpg',\r\n    '../img/7_800.jpg',\r\n    '../img/8_400.jpg',\r\n    '../img/8_800.jpg',\r\n    '../img/9_400.jpg',\r\n    '../img/9_800.jpg',\r\n    '../img/10_400.jpg',\r\n    '../img/10_800.jpg',\r\n];\r\n\r\nself.addEventListener('install', event => {\r\n    event.waitUntil(\r\n        caches.open(staticCacheName)\r\n            .then( cache => {\r\n                return cache.addAll(assets)\r\n                    .then(() => self.skipWaiting());\r\n            })\r\n    );\r\n});\r\n\r\n/*\r\n * activate service worker, get latest cache and delete old ones\r\n */\r\nself.addEventListener('activate', event => {\r\n    event.waitUntil(\r\n        caches.keys().then( cacheNames => {\r\n            return Promise.all(\r\n                cacheNames.filter( cacheName => {\r\n                    return cacheName.startsWith('restaurant-review-') &&\r\n                        cacheName !== staticCacheName;\r\n                }).map( cacheName => {\r\n                    return caches.delete(cacheName);\r\n                })\r\n            );\r\n        })\r\n    );\r\n});\r\n\r\n/**\r\n * Intercept requests and fetch them from cache first with network fallback\r\n */\r\nself.addEventListener('fetch', function (event) {\r\n    const requestUrl = new URL(event.request.url);\r\n\r\n    if (requestUrl.origin === location.origin) {\r\n        if (requestUrl.pathname === '/') {\r\n            event.respondWith(\r\n                caches.match('index.html')\r\n            );\r\n            return;\r\n        }\r\n    }\r\n\r\n    event.respondWith(\r\n        caches.match(event.request).then(function (response) {\r\n            return response || fetch(event.request);\r\n        })\r\n    );\r\n});"]}